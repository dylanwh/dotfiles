#!/usr/bin/perl
use strict;
use warnings;
use Sys::Hostname;
use Template;
use encoding 'utf8';

my @pre_process;
my @wrapper;
my @include=(".");
my %define = (
    HOST => hostname,
    HOME => $ENV{HOME},
    ENV  => { %ENV },
);

# manually parse the arguments for cpp compatibility
while (my $opt = shift @ARGV) {
    if ($opt =~ /^-D(\w+)(?:=(.+?))?$/) { $define{$1} = $2 || 1; }
    elsif ($opt =~ /^-U(\w+)$/)         { delete $define{$1} }
    elsif ($opt =~ /^-I(.+?)$/)         { push @include, $1 }
    elsif ($opt =~ /^-P(.+?)$/)         { push @pre_process, $1 }
    elsif ($opt =~ /^-W(.+?)$/)         { push @wrapper, $1 }
    elsif ($opt =~ /^-P$/)              { next }
    elsif ($opt eq '--')                { last }
    elsif ($opt =~ /^-/)                { die "Unknown option: $opt\n" }
    else                                { push @ARGV, $opt; last }
}

$define{HOST} = (split(/\./, $define{HOST}))[0];

my $template = new Template {
    INCLUDE_PATH => \@include,     # or list ref
    PRE_PROCESS  => \@pre_process, # prefix each template
    WRAPPER      => \@wrapper,     # wrappers
    EVAL_PERL    => 1,             # evaluate Perl code blocks
};

$template->process(\*ARGV, \%define) or die $template->error;
