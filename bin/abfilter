#!/usr/bin/env perl
#!/usr/bin/env perl
use strict;
use warnings;
use IO::File;

my ($print, $pred) = @ARGV;
if (not $print) {
	$print = '$email';
}

if (not $pred) {
	$pred = '1';
}

my $infile  = "$ENV{HOME}/.abook/addressbook";

my $file = new IO::File($infile) or die "$!";
my ($book, $meta) = parse_file($file);

no warnings;
no strict;

$print = eval "sub { $print }" or die $@;
$pred = eval "sub { $pred }" or die $@;

my $i = 0;
foreach my $entry (@$book) {
	foreach my $key (keys %$entry) {
		my $v = $entry->{$key};
		if (ref $v and ref $v eq 'ARRAY') {
			@{$key} = @$v;
			${$key} = $v->[0];
		} else {
			${$key} = $v;
			@{$key} = ($v);
		}
	}
	if ($pred->()) {
		my $v = $print->();
		print "$v\n" if length $v;
	}
	foreach my $key (keys %$entry) {
		undef ${$key};
		undef @{$key};
	}
}

sub parse_file {
	my ($file) = shift;
	my ($i, $meta, @entries, %meta, $key);
	local $_;

	while ($_ = $file->getline) {
		# skip lines begining with '#' and empty lines.
		next if /^#/;
		next if length() < 1;

		# match [n] where n is a number.
		if (/^\[(\d+)\]$/) {
			$i = $1 + 0;
			$meta = 0;
		} 
		# match [n] where n is a name.
		elsif (/^\[(\w+)\]$/) {
			$key = $1;
			$meta = 1;
		} 
		# match field=value
		elsif (/^(\w+)=(.+?)\s*$/) {
			my ($field, $value) = ($1, $2);
			if ($meta) {
				$meta{$key}{$field} = $value;
			} else {
				$entries[$i]{$field} = $value =~ /,/ ? [ split(/,/, $value) ] : $value;
			}
		}
	}

	return (\@entries, \%meta);
}

