#!/usr/bin/env perl
use strict;
use warnings;
use feature 'say';

use Getopt::Long qw(:config gnu_getopt);

our (%FROM, %TO);
my $from = 'yaml-xs';
my $to   = 'perl';

GetOptions( 'from|f=s' => \$from, 'to|t=s' => \$to );

$TO{$to}->( $FROM{$from}->( shift @ARGV ) );

BEGIN {
    %FROM = (
        'yaml-xs' => sub {
            my ($file) = @_;
            require YAML::XS;
            return YAML::XS::LoadFile($file);
        },
        'json-xs' => sub {
            my ($file) = @_;
            require JSON::XS;
            my $fh = $file->openr;
            local $/ = undef;
            JSON::XS::decode_json($fh->getline);
        },
        'perl' => sub {
            my ($file) = @_;
            return require $file->absolute;
        },
    );

    %TO = (
        'yaml-xs' => sub {
            my ($data) = @_;
            require YAML::XS;
            say YAML::XS::Dump($data);
        },
        'json-xs' => sub {
            my ($data) = @_;
            require JSON::XS;
            say JSON::XS::encode_json($data);
        },
        'perl' => sub {
            my ($data) = @_;
            require Data::Dumper;

            no warnings 'once';
            local $Data::Dumper::Terse = 1;
            local $Data::Dumper::Indent = 1;
            local $Data::Dumper::Useqq = 1;
            local $Data::Dumper::Deparse = 1;
            local $Data::Dumper::Quotekeys = 0;
            local $Data::Dumper::Sortkeys = 1;
            say Data::Dumper::Dumper($data);
        },
    );
}
