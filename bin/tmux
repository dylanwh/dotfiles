#!/usr/bin/env perl
use strict;
use warnings;
use IO::File;
use Cwd 'realpath';

my $TMUX_ENV = "$ENV{HOME}/.ssh/tmux.env";

my @path = grep { realpath($_) ne "$ENV{HOME}/bin" } split(/:/, $ENV{PATH});
$ENV{PATH} = join(':', @path);

if (-f $TMUX_ENV) {
    my $env = parse_tmux_env($TMUX_ENV);
    unless (kill 0 => $env->{SSH_AGENT_PID}) {
        # file exits but process does not.
        # time to start over.
        write_tmux_env($TMUX_ENV);
        $env = parse_tmux_env($TMUX_ENV);
    }
    export_tmux_env($env);
}
else {
    write_tmux_env($TMUX_ENV);
    export_tmux_env( parse_tmux_env($TMUX_ENV) );
}

exec(tmux => @ARGV);

sub export_tmux_env {
    my ($env) = @_;
    foreach my $key (keys %$env) {
        $ENV{$key} = $env->{$key};
    }
}

sub parse_tmux_env {
    my ($file) = @_;
    my $fh = IO::File->new($file, "r") or die "unable to open $file: $!\n";
    my %env;

    while (my $cmd = $fh->getline) {
        if ($cmd =~ /^setenv (\w+) (.+?);/) {
            $env{$1}=$2;
        }
        elsif ($cmd =~ /^echo (.+?);/) {

        }
    }

    return \%env;
}

sub write_tmux_env {
    my ($file) = @_;
    system("ssh-agent -c > '$file'");
}

