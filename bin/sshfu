#!/usr/bin/env perl
use strict;
use warnings;

use File::stat;
use IO::Handle;
use Fcntl 'F_GETFD', 'F_SETFD', 'FD_CLOEXEC';
use Getopt::Long qw(  :config pass_through gnu_compat bundling no_getopt_compat );
use YAML::XS 'LoadFile', 'Dump';
use POSIX 'pause';

use constant DISPLAY => $ENV{DISPLAY};
use constant WINDOWID => $ENV{WINDOWID};
use if DISPLAY, 'Clipboard';

my ($root, $type);

GetOptions(
    'root|R|r' => \$root,
);

my $name       = shift @ARGV;
my $hosts_file = "$ENV{HOME}/.sshfu";

die "config file has dangerous perms" if stat($hosts_file)->mode & 0066;
my @hosts = @{ LoadFile($hosts_file) };

my @matches = grep { match($_, $name)  } @hosts;

die "No hosts match $name\n"       if @matches < 1;
die "Too many hosts match $name\n" if @matches > 1;

my $host = $matches[0];

process($host, @ARGV);

sub process {
    my ($host, @args) = @_;
    my $user = $root ? 'root' : $host->{admin};
    my $pass = $root ? $host->{root_pass} : $host->{admin_pass};

    my ($in, $out);
    pipe ($in, $out);
    $out->autoflush(1);
    $out->print($pass . "\n");

    my $flags = fcntl($in, F_GETFD, 0);
    fcntl($in, F_SETFD, $flags ^ FD_CLOEXEC);
    my $fd = $in->fileno;

    my $address = $host->{ip_address} // $host->{hostname};
    print "Going to ssh to $user\@$address, using fd $fd for password (args: @args)\n";

    if (DISPLAY) {
        print "Root password in clipboard.\n";
        Clipboard->copy($host->{root_pass});
    }
    else {
        print "Root password is $host->{root_pass}\n";
    }

    my $pid = fork;
    if ($pid) {
        set_title("sshfu: $host->{name}");
        my @local_cmd;
        if (WINDOWID && $type) {
            push @local_cmd, (
                '-o' => "LocalCommand=kill -USR1 $pid",
                '-o' => "PermitLocalCommand=yes",
            );
        }
        sshpass('ssh', $fd, @local_cmd, "$user\@$address");
    }
    else {
        if (WINDOWID && $type) {
            $SIG{USR1} = sub { print "typing password...\n" };
            pause;
            print "typing...\n";
            sleep(1);
            disable_input();
            windowfocus WINDOWID;
            type 'su';
            key 'Return';
            sleep(1);
            type $host->{root_pass};
            key 'Return';
            enable_input();
        }
    }
}

sub sshpass {
    my ($cmd, $fd, @args) = @_;
    system('sshpass', "-d$fd", $cmd, '-oStrictHostKeyChecking=no', '-A', @args);
    sleep 20;
}

sub match {
    my ($host, $name) = @_;

    index($host->{name}, $name) >= 0
        or index($host->{hostname}, $name) >= 0;
}


sub set_title {
    my $title = shift;
    print "\e]2;$title\a";
}
