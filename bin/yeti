#!/usr/bin/python
# vim: set et:
import sys, os
from ConfigParser import ConfigParser
from datetime import datetime

from couchdb        import Server
from couchdb.schema import Document, TextField, DateTimeField, ListField

def main():
    config     = get_config()
    cmd, tasks = get_options()

    server = Server(config.get('couch', 'server'))
    ts     = server[config.get('couch', 'database')]

    if cmd in ('start', 's', '-s'):
        for task in tasks:
            print "start work on %s" % task
            entry = Timesheet(name = task)
            entry.store(ts)
    elif cmd in ('active', 'act', 'a', '-a'):
        for row in Timesheet.view(ts, 'ts/active').rows:
            print "active: %s" % row.key
    elif cmd in ('stop', 'S', '-S'):
        for task in tasks:
            print "stop work on %s" % task
            for row in Timesheet.view(ts, 'ts/active', key = task).rows:
                entry = Timesheet.load(ts, row.value)
                entry.done = datetime.now()
                entry.store(ts)
    elif cmd in ('total', 't', '-t'):
        for row in Timesheet.view(ts, 'ts/total', group = True).rows:
            print "%s: %d" % (row.key, row.value)

def get_config():
    cfg = ConfigParser()
    cfg.read("%s/.yetirc" % os.getenv('HOME'))
    return cfg

def get_options():
    try:
        return (sys.argv[1], sys.argv[2:])
    except:
        return ('', [])

class Timesheet(Document):
    name = TextField()
    time = DateTimeField(default=datetime.now)
    done = DateTimeField(default=None)
    type = TextField(default="task")

main()
