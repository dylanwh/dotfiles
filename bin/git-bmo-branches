#!/usr/bin/env perl
use 5.24.0;
use experimental 'signatures';
use Git::Wrapper;
use LWP::UserAgent::WithCache;
use JSON::MaybeXS;
use Data::Printer;

use LWP::UserAgent::WithCache;
my $ua = LWP::UserAgent::WithCache->new(
    agent              => 'git-bmo-branches v1 dylan@hardison.net',
    namespace          => 'git-bmo-branches',
    cache_root         => File::Spec->catfile( File::HomeDir->my_home, '.cache' ),
    default_expires_in => 600,
);
my $git = Git::Wrapper->new('.');
my @bug_branches = grep { /^bug-\d+$/a } map { s/^\*?\s+//r } $git->branch();

foreach my $branch (@bug_branches) {
    my (undef, $bug_id) = split(/-/, $branch, 2);
    my $bug = get_bug($ua, $bug_id);
    if ($bug->{status} ne 'NEW' and $bug->{status} ne 'ASSIGNED') {
        say $git->branch('-D', $branch);
    }
    else {
        say "$branch: $bug->{summary} [$bug->{status}]";
    }
}

sub get_bug ($ua, $bug_id) {
    my $resp = $ua->get("https://bugzilla.mozilla.org/rest/bug/$bug_id?include_fields=summary,status,resolution");
    if ($resp->code == 200) {
        return decode_json($resp->content)->{bugs}[0];
    }
    else {
        die $resp->content;
    }
}

