; vim: set ft=scheme:
(define (split re str)
  (let ((r (make-regexp re)))
	(let loop ((s str)
			   (result '()))
	  (let ((m (regexp-exec r s)))
		(if (not m)
		  (if (< 0 (string-length s))
			(reverse! (cons s result))
			(reverse! result))
		  (if (< 0 (string-length (match:prefix m)))
			(loop (match:suffix m) (cons (match:prefix m) result))
			(loop (match:suffix m) result)))))))

(use-modules (ice-9 readline))
(activate-readline)

;(define-macro (fn args . body)
;			  `(lambda ,args ,@body))


(define call/cc call-with-current-continuation)

;(define (test)
 ; (let ((cont #f))
  ; 	(display "begin\n")
   ;	(call/cc
  	;  (fn (c)
  	 ;	  (set! cont c)
  	;	  (display "foo\n")
  	;	  (c)
  	;	  (display "bar\n")
  	;	  (c)
  	;	  (display "baz\n")))
   	;(display "end\n")
   	;(cont)
   	;(display "whee!\n")))




